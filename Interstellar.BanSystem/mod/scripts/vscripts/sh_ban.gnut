untyped

global function BanEquipment_Init

global function getWeaponBanData
global function getTitanBanData
global function getAbilityBanData
global function getGrenadeBanData
global function getBoostBanData
global function getExecutionBanData
global function getKitBanData
global function getMeleeBanData

global function createUniversalBanStruct
global function createWeaponBanStruct
global function createTitanBanStruct
global function createBoostBanStruct

const NR_OF_BANABLE_ELEMENTS = 201

global const UNKNOWN_NAME = "UNKNOWN"
global const UNDEFINED = "UNDEFINED"

global struct WeaponBanStruct {
	string name,
	string displayName,
	bool   disabled,
	string	  mod1,
	string    mod2,
	array <string>   visor,
	string uniqueMod,
}

global struct BoostBanStruct
{
	string name,
	string displayName,
	bool   disabled,
	int persistantVarId,
	int burnMeterId,
}

global struct UniversalBanStruct
{
	string name,
	string displayName,
	bool disabled
}

global struct TitanBanStruct
{
	string name,
	string displayName,
	bool disabled,

	//thanks monarch for making me  handle 3 seperet core passives
	UniversalBanStruct& passive1,
	UniversalBanStruct& passive2,
	UniversalBanStruct& passive3,
}

struct {
 array<WeaponBanStruct> weaponArray
 array<UniversalBanStruct> grenadeArray
 array<UniversalBanStruct> abilityArray
 array<UniversalBanStruct> executionArray
 array<UniversalBanStruct> kitArray
 array<UniversalBanStruct> meleeArray
 array<BoostBanStruct> boostArray
 array<TitanBanStruct> titanArray
 array<string> admins
 table< string, array< UniversalBanStruct > > titanPassives
} file

void function BanEquipment_Init()
{
	Setup_AdminList()
	InitData()
	ImportData()

	AddClientCommandCallback( "BanUiUpdateData", ClientCommandCallback_BanUiUpdateData )
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///SETUP ADMIN
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void function Setup_AdminList()
{
	string cvar = GetConVarString( "grant_admin" )
	file.admins = split( cvar, "," )
}

bool function IsPlayerAdmin(entity player) {
	foreach (string admin in file.admins) {
		if (admin == player.GetUID()) {
			return true
		}
	}
	return false
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///IMPORT DATA
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void function ImportData()
{
	string data = ""
	data += GetCurrentPlaylistVarOrUseValue("BAN_DATA_0", "") + ""
	data += GetCurrentPlaylistVarOrUseValue("BAN_DATA_1", "") + ""
	data += GetCurrentPlaylistVarOrUseValue("BAN_DATA_2", "") + ""
	data += GetCurrentPlaylistVarOrUseValue("BAN_DATA_3", "") + ""

	array< string > importArray = parseImportData( data )
	if(importArray.len() != NR_OF_BANABLE_ELEMENTS)
	{
		string cVar = GetConVarString( "ban_config" )
    		importArray = parseImportData( cVar )
		if(importArray.len() == NR_OF_BANABLE_ELEMENTS)
		{
			if(IsLobby()) {
				SetPlaylistVarOverride("BAN_DATA_0", cVar.slice(0,60))
				SetPlaylistVarOverride("BAN_DATA_1", cVar.slice(60,120))
				SetPlaylistVarOverride("BAN_DATA_2", cVar.slice(120,180))
				SetPlaylistVarOverride("BAN_DATA_3", cVar.slice(180))
			}
		}
		else
		{
			return
		}
  	}

	int currentIndex = 0
	for( int i = 0; i < file.abilityArray.len() + file.grenadeArray.len(); i++ )
	{
		UpdateAbility( i, importArray[currentIndex++] )
	}

	for( int i = 0; i < file.executionArray.len() + file.kitArray.len() + file.meleeArray.len() ; i++ )
	{
		UpdateEquipment( i, importArray[currentIndex++] )
	}

	for( int i = 0; i < file.weaponArray.len(); i++ )
	{
		string updateData = ""
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]

		UpdateWeapon( i, updateData )
	}

	for( int i = 0; i < file.titanArray.len(); i++ )
	{
		string updateData = ""
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]
		updateData += importArray[currentIndex++]

		UpdateTitan( i, updateData )
	}

	for( int i = 0; i < file.boostArray.len(); i++ )
	{
		UpdateBoost( i, importArray[currentIndex++] )
	}

	string dataToStore = ""
	foreach (UniversalBanStruct banStruct in file.abilityArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.grenadeArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.executionArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.kitArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.meleeArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	for(int i = 0; i < file.weaponArray.len(); i++)
	{
		dataToStore += GetWeaponStringaData(i)
	}
	for(int i = 0; i < file.titanArray.len(); i++)
	{
		dataToStore += GetTitanStringaData(i)
	}
	foreach(BoostBanStruct boostStruct in file.boostArray) {
		dataToStore += boostStruct.disabled ? "1" : "0"
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///ClientCommandCallback_BanUiUpdateData
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool function ClientCommandCallback_BanUiUpdateData( entity player, array<string> args )
{
	//TODO TEST IF PLAYER IS ALLOWED TO EDIT DATA
	if (file.admins.len() == 0) {
		if ( GetConVarInt( "ns_private_match_only_host_can_change_settings" ) >= 1 )
		{
			if ( !NSIsPlayerLocalPlayer( player ) )
			{
				return true
			}
		}
	} else {
		if (!IsPlayerAdmin(player)) {
			return true
		}
	}

	if(args.len() == 0)
	{
		return true
	}


	foreach(string changeData in args)
	{
		array<string> data = split(changeData ,"|")

		if(data.len() < 3) {
			continue
		}

		string typeToUpdate = data[0]

		switch(typeToUpdate)
		{
			case "ability":
				UpdateAbility(int(data[1]), data[2])
				break
			case "weapon":
				UpdateWeaponFromCategory(int(data[1]), int(data[2]), data[3])
				break
			case "titan":
				UpdateTitanFromCategory(int(data[1]), int(data[2]), data[3])
				break
			case "boost":
				UpdateBoost(int(data[1]), data[2])
				break
			case "equipment":
				UpdateEquipment(int(data[1]), data[2])
				break
		}
	}

	string dataToStore = ""
	foreach (UniversalBanStruct banStruct in file.abilityArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.grenadeArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.executionArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.kitArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	foreach (UniversalBanStruct banStruct in file.meleeArray )
	{
		dataToStore += banStruct.disabled ? "1" : "0"
	}
	for(int i = 0; i < file.weaponArray.len(); i++)
	{
		dataToStore += GetWeaponStringaData(i)
	}
	for(int i = 0; i < file.titanArray.len(); i++)
	{
		dataToStore += GetTitanStringaData(i)
	}
	foreach(BoostBanStruct boostStruct in file.boostArray) {
		dataToStore += boostStruct.disabled ? "1" : "0"
	}

	if(IsLobby()) {
		SetPlaylistVarOverride("BAN_DATA_0", dataToStore.slice(0,60))
		SetPlaylistVarOverride("BAN_DATA_1", dataToStore.slice(60,120))
		SetPlaylistVarOverride("BAN_DATA_2", dataToStore.slice(120,180))
		SetPlaylistVarOverride("BAN_DATA_3", dataToStore.slice(180))
	}


	return true
}

void function UpdateAbility(int index, string data)
{
	UniversalBanStruct structToChange

	if(index < file.abilityArray.len())
	{
		structToChange = file.abilityArray[index]
	}
	else
	{
		structToChange = file.grenadeArray[index - file.abilityArray.len()]
	}

	structToChange.disabled =  (data == "1") ? true : false
}

void function UpdateWeaponFromCategory(int category, int index, string data)
{
	switch(category) {
		case 0:
			UpdateWeapon(index, data)
			break
		case 1:
			UpdateWeapon(index + 3, data)
			break
		case 2:
			UpdateWeapon(index + 5, data)
			break
		case 3:
			UpdateWeapon(index + 9, data)
			break
		case 4:
			UpdateWeapon(index + 12, data)
			break
		case 5:
			UpdateWeapon(index + 15, data)
			break
		case 6:
			UpdateWeapon(index + 17, data)
			break
		case 7:
			UpdateWeapon(index + 21, data)
			break
		case 8:
			UpdateWeapon(index + 26, data)
			break
	}
}

void function UpdateTitanFromCategory(int category, int index, string data)
{
	switch(category) {
		case 0:
			UpdateTitan(index, data)
			break
		case 1:
			UpdateTitan(index + 2, data)
			break
		case 2:
			UpdateTitan(index + 6, data)
			break
	}
}

void function UpdateBoost(int index, string data)
{
	file.boostArray[index].disabled = (data == "1") ? true : false
}

void function UpdateEquipment(int index, string data)
{
	if(index > 21) {
		file.meleeArray[index-22].disabled = (data == "1") ? true : false
	} else if (index > 12) {
		file.kitArray[index-13].disabled = (data == "1") ? true : false
	} else {
		file.executionArray[index].disabled = (data == "1") ? true : false
	}
}

void function UpdateWeapon(int index, string data)
{
	WeaponBanStruct structToChange = file.weaponArray[index]
	array< string > dataAtr = parseImportData(data)

	structToChange.disabled =  dataAtr[0] == "1" ? true : false
	structToChange.mod1 = GetWeaponModStringById(dataAtr[1], structToChange)
	structToChange.mod2 = GetWeaponModStringById(dataAtr[2], structToChange)
	structToChange.visor = [GetWeaponVisorStringFromId(dataAtr[3])]
}

void function UpdateTitan(int index, string data)
{
	TitanBanStruct structToChange = file.titanArray[index]

	array< string > dataAtr = parseImportData(data)

	if( index != 5)
	{
		structToChange.disabled = dataAtr[0] == "1" ? true : false
		structToChange.passive1 = GetTitanKitStringFromId(dataAtr[1], structToChange.name )
		structToChange.passive2 = GetTitanPassiveStringFromId(dataAtr[2])
		structToChange.passive3 = GetTitanPassiveStringFromId(dataAtr[3])
	}
	else {
		structToChange.passive1 = GetMonarchCoreStringFromId(dataAtr[1], 0)
		structToChange.passive2 = GetMonarchCoreStringFromId(dataAtr[2], 1)
		structToChange.passive3 = GetMonarchCoreStringFromId(dataAtr[3], 2)
	}

}

string function GetWeaponModStringById(string id, WeaponBanStruct weaponStruct)
{
	switch(id)
	{
		case "0":
			return "UNDEFINED"
		case "1":
			return "extended_ammo"
		case "2":
			return "pas_fast_reload"
		case "3":
			return "pas_fast_ads"
		case "4":
			return "pas_run_and_gun"
		case "5":
			return "tactical_cdr_on_kill"
		case "6":
			return "pas_fast_swap"
		case "7":
			return ""
	}
	return weaponStruct.uniqueMod
}

string function GetWeaponVisorStringFromId(string str)
{
	switch(str)
	{
		case "0":
			return "UNDEFINED"
		case "1":
			return "holosight"
		case "2":
			return "hcog"
		case "3":
			return "redline_sight"
		case "4":
			return "aog"
		case "5":
			return "scope_4x"
		case "6":
			return "threat_scope"
		case "7":
			return ""
	}
	return "UNDEFINED"
}

UniversalBanStruct function GetTitanPassiveStringFromId(string str)
{
	try {
		return file.titanPassives["passive"][int( str )]
	} catch(e) {
		return createUniversalBanStruct(UNDEFINED)
	}
}

UniversalBanStruct function GetTitanKitStringFromId(string str, string titanKit)
{
	try {
		return file.titanPassives[titanKit][int( str )]
	} catch(e) {
		return createUniversalBanStruct(UNDEFINED)
	}
}

UniversalBanStruct function GetMonarchCoreStringFromId(string str, int coreStage)
{
	try {
		return file.titanPassives["vanguard_" + coreStage][int( str )]
	} catch(e) {
		return createUniversalBanStruct(UNDEFINED)
	}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///Serialize data
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

string function GetWeaponStringaData(int id)
{
	if(id == -1) {
		return "0000"
	}
	WeaponBanStruct currentStruct = file.weaponArray[id]
	string data = ""
	data += currentStruct.disabled ? "1" : "0"
	data += GetWeaponModIdFromString(currentStruct.mod1)
	data += GetWeaponModIdFromString(currentStruct.mod2)
	data += GetWeaponVisorIdFromString(currentStruct.visor[0])
	return data
}

string function GetWeaponModIdFromString(string str)
{
	switch(str)
	{
		case "UNDEFINED":
			return "0"
		case "extended_ammo":
			return "1"
		case "pas_fast_reload":
			return "2"
		case "pas_fast_ads":
			return "3"
		case "pas_run_and_gun":
			return "4"
		case "tactical_cdr_on_kill":
			return "5"
		case "pas_fast_swap":
			return "6"
		case "":
			return "7"
	}
	return "8"
}

string function GetWeaponVisorIdFromString(string str)
{
	switch(str)
	{
		case "UNDEFINED":
			return "0"
		case "holosight":
			return "1"
		case "hcog":
			return "2"
		case "redline_sight":
			return "3"
		case "aog":
			return "4"
		case "scope_4x":
			return "5"
		case "threat_scope":
			return "6"
		case "":
			return "7"
	}
	return "0"
}

string function GetTitanStringaData(int id)
{
	if(id == -1) {
		return "0000"
	}
	TitanBanStruct currentStruct = file.titanArray[id]
	string data = ""
	if(id != 5)
	{
		data += currentStruct.disabled ? "1" : "0"
		data += GetTitanKitIdFromStr(currentStruct.passive1.name, currentStruct.name)
		data += GetTitanPassiveIdFromStr(currentStruct.passive2.name)
		data += GetTitanPassiveIdFromStr(currentStruct.passive3.name)
	} else
	{
		data += "1"
		data += GetMonarchCoreIdFromString(currentStruct.passive1.name, 0)
		data += GetMonarchCoreIdFromString(currentStruct.passive2.name, 1)
		data += GetMonarchCoreIdFromString(currentStruct.passive3.name, 2)
	}

	return data
}

string function GetTitanPassiveIdFromStr(string str)
{
	try {
		for(int i = 0; i < file.titanPassives["passive"].len(); i++) {
			if (file.titanPassives["passive"][i].name == str) {
				return i.tostring()
			}
		}
	} catch(e) {}

	return "0"
}

string function GetTitanKitIdFromStr(string str, string titanKit)
{
	try {
		for(int i = 0; i < file.titanPassives[titanKit].len(); i++) {
			if (file.titanPassives[titanKit][i].name == str) {
				return i.tostring()
			}
		}
	} catch(e) {}

	return "0"
}

string function GetMonarchCoreIdFromString(string str, int coreStage)
{
	try {
		for(int i = 0; i < file.titanPassives["vanguard_" + coreStage].len(); i++) {
			if (file.titanPassives["vanguard_" + coreStage][i].name == str) {
				return i.tostring()
			}
		}
	} catch(e) {}

	return "0"
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///Get data
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

array<WeaponBanStruct> function getWeaponBanData()
{
	return file.weaponArray
}

array<UniversalBanStruct> function getGrenadeBanData()
{
	return file.grenadeArray
}

array<UniversalBanStruct> function getAbilityBanData()
{
	return file.abilityArray
}

array<BoostBanStruct> function getBoostBanData()
{
	return file.boostArray
}

array<TitanBanStruct> function getTitanBanData()
{
	return file.titanArray
}

array<UniversalBanStruct> function getExecutionBanData()
{
	return file.executionArray
}

array<UniversalBanStruct> function getKitBanData()
{
	return file.kitArray
}

array<UniversalBanStruct> function getMeleeBanData()
{
	return file.meleeArray
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///Setup data
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void function InitData()
{
	file.grenadeArray = []
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_frag_grenade","Frag Grenade"))
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_grenade_emp", "Arc Grenade"))
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_thermite_grenade","Firestar"))
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_grenade_gravity","Gravity Star"))
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_grenade_electric_smoke","Electric Smoke Grenade"))
	file.grenadeArray.append(createUniversalBanStruct("mp_weapon_satchel","Satchel"))

	file.abilityArray = []
	file.abilityArray.append(createUniversalBanStruct("mp_ability_cloak","Cloak"))
	file.abilityArray.append(createUniversalBanStruct("mp_weapon_grenade_sonar","Pulse Blade"))
	file.abilityArray.append(createUniversalBanStruct("mp_ability_grapple","Grapple"))
	file.abilityArray.append(createUniversalBanStruct("mp_ability_heal","Stim"))
	file.abilityArray.append(createUniversalBanStruct("mp_weapon_deployable_cover","A-Wall"))
	file.abilityArray.append(createUniversalBanStruct("mp_ability_shifter","Phase Shift"))
	file.abilityArray.append(createUniversalBanStruct("mp_ability_holopilot","Holo Pilot"))

	file.boostArray = []

	file.boostArray.append(createBoostBanStruct("burnmeter_amped_weapons" 	  ,1, 11,"Amped Weapons"))
	file.boostArray.append(createBoostBanStruct("burnmeter_ticks" 			  ,2, 12,"Ticks"))
	file.boostArray.append(createBoostBanStruct("burnmeter_ap_turret_weapon"  ,4, 18,"Pilot Sentry"))
	file.boostArray.append(createBoostBanStruct("burnmeter_maphack" 		  ,0, 10,"Map Hack"))
	file.boostArray.append(createBoostBanStruct("burnmeter_emergency_battery" ,8, 20,"Battery Back-up"))
	file.boostArray.append(createBoostBanStruct("burnmeter_radar_jammer" 	  ,10, 22,"Radar Jammer"))
	file.boostArray.append(createBoostBanStruct("burnmeter_at_turret_weapon"  ,6, 17,"Titan Sentry"))
	file.boostArray.append(createBoostBanStruct("burnmeter_smart_pistol" 	  ,9, 21,"Smart Pistol"))
	file.boostArray.append(createBoostBanStruct("burnmeter_phase_rewind" 	  ,5, 16,"Phase Rewind"))
	file.boostArray.append(createBoostBanStruct("burnmeter_hard_cover" 		  ,11, 23,"Hard Cover"))
	file.boostArray.append(createBoostBanStruct("burnmeter_holopilot_nova" 	  ,7, 19,"Holo Pilot Nova"))
	file.boostArray.append(createBoostBanStruct("burnmeter_random_foil" 	  ,3, 14,"Dice Roll"))

	file.weaponArray = []
	//index 0-29
	//index 0 - 22 primary
	//index 23 - 25 sec
	// index 26 - 29 at
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_rspn101","R-201"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_rspn101_og","R-101"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_hemlok","Hemlock"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_g2","G2"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_vinson","Flatline"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_car","CAR"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_alternator_smg","Alternator"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_hemlok_smg","Volt"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_r97","R-97"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_lmg","Spitfire"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_lstar","L-STAR"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_esaw","Devotion"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_sniper","Kraber" ,"ricochet"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_doubletake","DoubleTake" ,"ricochet"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_dmr","DMR"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_shotgun","EVA-8"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_mastiff","Mastiff"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_smr","Sidewinder"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_epg","EPG"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_softball","Softball"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_pulse_lmg","Cold War"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_wingman_n","Wingman Elite", "ricochet"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_shotgun_pistol","Mozambique"))

	file.weaponArray.append(createWeaponBanStruct("mp_weapon_autopistol","RE-45" ,"silencer"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_semipistol","P2016" ,"silencer"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_wingman","B3 Wingman" ,"silencer"))


	file.weaponArray.append(createWeaponBanStruct("mp_weapon_defender","Charge Rifle", "quick_charge"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_mgl","MGL"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_arc_launcher","Thunderbolt"))
	file.weaponArray.append(createWeaponBanStruct("mp_weapon_rocket_launcher","Archer"))

	file.titanArray = []
	file.titanArray.append(createTitanBanStruct("northstar","Northstar"))
	file.titanArray.append(createTitanBanStruct("ronin","Ronin"))

	file.titanArray.append(createTitanBanStruct("ion","Ion"))
	file.titanArray.append(createTitanBanStruct("tone","Tone"))
	file.titanArray.append(createTitanBanStruct("vanguard","Monarch"))
	file.titanArray.append(createTitanBanStruct("vanguardCores","Monarch Cores wtf is this doing here ?" ,true))

	file.titanArray.append(createTitanBanStruct("scorch","Scorch"))
	file.titanArray.append(createTitanBanStruct("legion","Legion"))

	file.titanPassives["ion"] <- []
	file.titanPassives["ion"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["ion"].append(createUniversalBanStruct("pas_ion_weapon","Entangled Energy"))
	file.titanPassives["ion"].append(createUniversalBanStruct("pas_ion_tripwire","Zero-Point Tripwire"))
	file.titanPassives["ion"].append(createUniversalBanStruct("pas_ion_vortex","Vortex Amplifier"))
	file.titanPassives["ion"].append(createUniversalBanStruct("pas_ion_lasercannon","Grand Cannon"))
	file.titanPassives["ion"].append(createUniversalBanStruct("pas_ion_weapon_ads","Refraction Lens"))

	file.titanPassives["scorch"] <- []
	file.titanPassives["scorch"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["scorch"].append(createUniversalBanStruct("pas_scorch_weapon","Wildfire Launcher"))
	file.titanPassives["scorch"].append(createUniversalBanStruct("pas_scorch_selfdmg","Tempered Plating"))
	file.titanPassives["scorch"].append(createUniversalBanStruct("pas_scorch_shield","Inferno Shield"))
	file.titanPassives["scorch"].append(createUniversalBanStruct("pas_scorch_firewall","Fuel for the Fire"))
	file.titanPassives["scorch"].append(createUniversalBanStruct("pas_scorch_flamecore","Scorched Earth"))

	file.titanPassives["northstar"] <- []
	file.titanPassives["northstar"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["northstar"].append(createUniversalBanStruct("pas_northstar_weapon","Piercing Shot"))
	file.titanPassives["northstar"].append(createUniversalBanStruct("pas_northstar_cluster","Enhanced Payload"))
	file.titanPassives["northstar"].append(createUniversalBanStruct("pas_northstar_trap","Twin Traps"))
	file.titanPassives["northstar"].append(createUniversalBanStruct("pas_northstar_flightcore","Viper Thrusters"))
	file.titanPassives["northstar"].append(createUniversalBanStruct("pas_northstar_optics","Thread Optics"))

	file.titanPassives["ronin"] <- []
	file.titanPassives["ronin"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["ronin"].append(createUniversalBanStruct("pas_ronin_weapon","Ricochet Rounds"))
	file.titanPassives["ronin"].append(createUniversalBanStruct("pas_ronin_arcwave","Thunderstorm"))
	file.titanPassives["ronin"].append(createUniversalBanStruct("pas_ronin_phase","Temporal Anomaly"))
	file.titanPassives["ronin"].append(createUniversalBanStruct("pas_ronin_swordcore","Highlander"))
	file.titanPassives["ronin"].append(createUniversalBanStruct("pas_ronin_autoshift","Phase Reflex"))

	file.titanPassives["tone"] <- []
	file.titanPassives["tone"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["tone"].append(createUniversalBanStruct("pas_tone_weapon","Enhanced Tracker Rounds"))
	file.titanPassives["tone"].append(createUniversalBanStruct("pas_tone_wall","Reinforced Particle Wall"))
	file.titanPassives["tone"].append(createUniversalBanStruct("pas_tone_sonar","Pulse-Echo"))
	file.titanPassives["tone"].append(createUniversalBanStruct("pas_tone_rockets","Rocket Barrage"))
	file.titanPassives["tone"].append(createUniversalBanStruct("pas_tone_burst","Burst Loader"))

	file.titanPassives["legion"] <- []
	file.titanPassives["legion"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["legion"].append(createUniversalBanStruct("pas_legion_weapon","Enhanced Ammo Capacity"))
	file.titanPassives["legion"].append(createUniversalBanStruct("pas_legion_smartcore","Sensor Array"))
	file.titanPassives["legion"].append(createUniversalBanStruct("pas_legion_gunshield","Bulwark"))
	file.titanPassives["legion"].append(createUniversalBanStruct("pas_legion_spinup","Light-Weight Alloys"))
	file.titanPassives["legion"].append(createUniversalBanStruct("pas_legion_chargeshot","Hidden Compartment"))

	file.titanPassives["vanguard"] <- []
	file.titanPassives["vanguard"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["vanguard"].append(createUniversalBanStruct("pas_vanguard_shield","Shield Amplifier"))
	file.titanPassives["vanguard"].append(createUniversalBanStruct("pas_vanguard_coremeter","Energy Thief"))
	file.titanPassives["vanguard"].append(createUniversalBanStruct("pas_vanguard_rearm","Rapid Rearm"))
	file.titanPassives["vanguard"].append(createUniversalBanStruct("pas_vanguard_doom","Survival of the Fittest"))

	file.titanPassives["vanguard_0"] <- []
	file.titanPassives["vanguard_0"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["vanguard_0"].append(createUniversalBanStruct("pas_vanguard_core1","Arc Rounds"))
	file.titanPassives["vanguard_0"].append(createUniversalBanStruct("pas_vanguard_core2","Missile Racks"))
	file.titanPassives["vanguard_0"].append(createUniversalBanStruct("pas_vanguard_core3","Energy Transfer"))

	file.titanPassives["vanguard_1"] <- []
	file.titanPassives["vanguard_1"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["vanguard_1"].append(createUniversalBanStruct("pas_vanguard_core4","Rearm and Reload"))
	file.titanPassives["vanguard_1"].append(createUniversalBanStruct("pas_vanguard_core5","Maelstorm"))
	file.titanPassives["vanguard_1"].append(createUniversalBanStruct("pas_vanguard_core6","Energy Field"))

	file.titanPassives["vanguard_2"] <- []
	file.titanPassives["vanguard_2"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["vanguard_2"].append(createUniversalBanStruct("pas_vanguard_core7","Multi-Trarget Missiles"))
	file.titanPassives["vanguard_2"].append(createUniversalBanStruct("pas_vanguard_core8","Superior Chassis"))
	file.titanPassives["vanguard_2"].append(createUniversalBanStruct("pas_vanguard_core9","XO-16 Accelerator"))

	file.titanPassives["passive"] <- []
	file.titanPassives["passive"].append(createUniversalBanStruct(UNDEFINED))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_enhanced_titan_ai","Assault Chip"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_auto_eject","Stealth Auto-Eject"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_mobility_dash_capacity","Turbo Engine"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_hyper_core","Overcore"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_build_up_nuclear_core","Nuclear Ejection"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_anti_rodeo","Counter Ready"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_bubbleshield","Dome Shield"))
	file.titanPassives["passive"].append(createUniversalBanStruct("pas_warpfall","Warpfall"))

	file.executionArray.append(createUniversalBanStruct("execution_neck_snap","Neck Snap"))

	file.executionArray.append(createUniversalBanStruct("execution_telefrag","Inner Pieces"))
	file.executionArray.append(createUniversalBanStruct("execution_grapple","Curb Check"))

	file.executionArray.append(createUniversalBanStruct("execution_stim", "Late Hit"))
	file.executionArray.append(createUniversalBanStruct("execution_cloak", "Now You See Me"))

	file.executionArray.append(createUniversalBanStruct("execution_ampedwall", "Hole In The Wall"))
	file.executionArray.append(createUniversalBanStruct("execution_holopilot", "Shadow Boxing"))

	file.executionArray.append(createUniversalBanStruct("execution_pulseblade","Get To The Point"))
	file.executionArray.append(createUniversalBanStruct("execution_face_stab","In Your Face"))

	file.executionArray.append(createUniversalBanStruct("execution_backshot","Grand Theft Semi-Auto"))
	file.executionArray.append(createUniversalBanStruct("execution_combo","2-3-2 Combo"))

	file.executionArray.append(createUniversalBanStruct("execution_knockout","Knee Puls"))
	file.executionArray.append(createUniversalBanStruct("execution_random","Random"))


	file.kitArray.append(createUniversalBanStruct("pas_power_cell","Power Cell"))
    file.kitArray.append(createUniversalBanStruct("pas_fast_health_regen","Fast Regen"))
    file.kitArray.append(createUniversalBanStruct("pas_ordnance_pack","Ordnance Expert"))
    file.kitArray.append(createUniversalBanStruct("pas_fast_embark","Phase Embark"))

	file.kitArray.append(createUniversalBanStruct("pas_enemy_death_icons","Kill Report"))
    file.kitArray.append(createUniversalBanStruct("pas_wallhang","Wallhang"))
    file.kitArray.append(createUniversalBanStruct("pas_ads_hover","Hover"))
    file.kitArray.append(createUniversalBanStruct("pas_stealth_movement","Low Profile"))
    file.kitArray.append(createUniversalBanStruct("pas_at_hunter","Titan Hunter"))

	file.meleeArray.append(createUniversalBanStruct("titan_melee","Titan Melee"))
	file.meleeArray.append(createUniversalBanStruct("pilot_melee","Pilot Melee"))
}

UniversalBanStruct function createUniversalBanStruct(string name,string displayName = UNKNOWN_NAME)
{
	UniversalBanStruct newStruct
	newStruct.name = name
	newStruct.displayName = displayName
	newStruct.disabled = false
	return newStruct
}

WeaponBanStruct function createWeaponBanStruct(string name ,string displayName = UNKNOWN_NAME ,string uniqueMod = "")
{
	WeaponBanStruct newStruct
	newStruct.name = name
	newStruct.displayName = displayName
	newStruct.disabled = false
	newStruct.mod1 = "UNDEFINED"
	newStruct.mod2 = "UNDEFINED"
	newStruct.visor = ["UNDEFINED"]
	newStruct.uniqueMod = uniqueMod

	return newStruct
}

BoostBanStruct function createBoostBanStruct(string name, int persistantVarId, int burnMeterId, string displayName= UNKNOWN_NAME)
{
	BoostBanStruct newStruct
	newStruct.name = name
	newStruct.displayName = displayName
	newStruct.disabled = false
	newStruct.persistantVarId = persistantVarId
	newStruct.burnMeterId = burnMeterId
	return newStruct
}

TitanBanStruct function createTitanBanStruct(string name,string displayName= UNKNOWN_NAME ,bool disabled = false)
{
	TitanBanStruct newStruct
	newStruct.name = name
	newStruct.displayName = displayName
	newStruct.disabled = disabled
	newStruct.passive1 = createUniversalBanStruct(UNDEFINED)
	newStruct.passive2 = createUniversalBanStruct(UNDEFINED)
	newStruct.passive3 = createUniversalBanStruct(UNDEFINED)
	return newStruct
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///Utility
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

array< string > function parseImportData(string importData)
{
  array< string > importArray
  for(int i = 0; i < importData.len(); i++) {
    switch (importData[i]) {
      case 48:
        importArray.append("0")
        break
      case 49:
        importArray.append("1")
        break
      case 50:
        importArray.append("2")
        break
      case 51:
        importArray.append("3")
        break
      case 52:
        importArray.append("4")
        break
      case 53:
        importArray.append("5")
        break
      case 54:
        importArray.append("6")
        break
      case 55:
        importArray.append("7")
        break
      case 56:
        importArray.append("8")
        break
    }
  }
  return importArray
}